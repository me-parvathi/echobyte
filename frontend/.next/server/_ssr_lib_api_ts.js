"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_lib_api_ts";
exports.ids = ["_ssr_lib_api_ts"];
exports.modules = {

/***/ "(ssr)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: () => (/* binding */ api),\n/* harmony export */   apiDelete: () => (/* binding */ apiDelete),\n/* harmony export */   apiGet: () => (/* binding */ apiGet),\n/* harmony export */   apiPatch: () => (/* binding */ apiPatch),\n/* harmony export */   apiPost: () => (/* binding */ apiPost),\n/* harmony export */   apiPut: () => (/* binding */ apiPut)\n/* harmony export */ });\nclass ApiClient {\n    constructor(){\n        this.baseUrl = \"http://localhost:8000/api\" || 0;\n        // For endpoints that don't need the /api prefix\n        this.apiBaseUrl = \"http://localhost:8000/api\" || 0;\n    }\n    async getAuthToken() {\n        if (false) {}\n        return null;\n    }\n    async handleResponse(response) {\n        if (!response.ok) {\n            let errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n            try {\n                const errorData = await response.json();\n                errorMessage = errorData.detail || errorMessage;\n            } catch  {\n            // If parsing fails, use the default message\n            }\n            throw new Error(errorMessage);\n        }\n        const contentType = response.headers.get('content-type');\n        if (contentType && contentType.includes('application/json')) {\n            return response.json();\n        }\n        return response.text();\n    }\n    async request(endpoint, options = {}) {\n        // Use the base URL directly since all our endpoints are API endpoints\n        const url = `${this.baseUrl}${endpoint}`;\n        console.log(`Making request to: ${url}`); // Add this debug log\n        const token = await this.getAuthToken();\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                ...token && {\n                    Authorization: `Bearer ${token}`\n                },\n                ...options.headers\n            },\n            ...options\n        };\n        try {\n            const response = await fetch(url, config);\n            return await this.handleResponse(response);\n        } catch (error) {\n            console.error(`API Error (${endpoint}):`, error);\n            throw error;\n        }\n    }\n    async get(endpoint) {\n        return this.request(endpoint, {\n            method: 'GET'\n        });\n    }\n    async post(endpoint, data) {\n        return this.request(endpoint, {\n            method: 'POST',\n            body: data ? JSON.stringify(data) : undefined\n        });\n    }\n    async put(endpoint, data) {\n        return this.request(endpoint, {\n            method: 'PUT',\n            body: data ? JSON.stringify(data) : undefined\n        });\n    }\n    async delete(endpoint) {\n        return this.request(endpoint, {\n            method: 'DELETE'\n        });\n    }\n    async patch(endpoint, data) {\n        return this.request(endpoint, {\n            method: 'PATCH',\n            body: data ? JSON.stringify(data) : undefined\n        });\n    }\n}\nconst api = new ApiClient();\nconst apiGet = (endpoint)=>api.get(endpoint);\nconst apiPost = (endpoint, data)=>api.post(endpoint, data);\nconst apiPut = (endpoint, data)=>api.put(endpoint, data);\nconst apiDelete = (endpoint)=>api.delete(endpoint); // Fixed this line\nconst apiPatch = (endpoint, data)=>api.patch(endpoint, data);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./lib/api.ts\n");

/***/ })

};
;